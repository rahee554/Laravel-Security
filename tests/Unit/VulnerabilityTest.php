<?php

namespace ArtflowStudio\LaravelSecurity\Tests\Unit;

use ArtflowStudio\LaravelSecurity\DTOs\Vulnerability;
use ArtflowStudio\LaravelSecurity\DTOs\VulnerabilitySeverity;
use ArtflowStudio\LaravelSecurity\Tests\TestCase;

class VulnerabilityTest extends TestCase
{
    /** @test */
    public function it_can_create_a_vulnerability()
    {
        $vulnerability = Vulnerability::make(
            'Test Vulnerability',
            VulnerabilitySeverity::HIGH,
            'This is a test vulnerability',
            '/path/to/file.php',
            42,
            'some code',
            'Fix this issue',
            ['meta' => 'data']
        );

        $this->assertEquals('Test Vulnerability', $vulnerability->title);
        $this->assertEquals(VulnerabilitySeverity::HIGH, $vulnerability->severity);
        $this->assertEquals('This is a test vulnerability', $vulnerability->description);
        $this->assertEquals('/path/to/file.php', $vulnerability->file);
        $this->assertEquals(42, $vulnerability->line);
        $this->assertEquals('some code', $vulnerability->code);
        $this->assertEquals('Fix this issue', $vulnerability->recommendation);
        $this->assertEquals(['meta' => 'data'], $vulnerability->metadata);
    }

    /** @test */
    public function it_can_convert_to_array()
    {
        $vulnerability = Vulnerability::make(
            'Test',
            VulnerabilitySeverity::MEDIUM,
            'Description',
            '/path/file.php'
        );

        $array = $vulnerability->toArray();

        $this->assertIsArray($array);
        $this->assertArrayHasKey('title', $array);
        $this->assertArrayHasKey('severity', $array);
        $this->assertArrayHasKey('description', $array);
        $this->assertArrayHasKey('file', $array);
    }

    /** @test */
    public function it_can_get_location_string()
    {
        $vulnerability = Vulnerability::make(
            'Test',
            VulnerabilitySeverity::LOW,
            'Description',
            '/path/file.php',
            100
        );

        $this->assertEquals('/path/file.php:100', $vulnerability->getLocation());
    }
}
